@page
@model RegisterModel
@{
    ViewData["Title"] = "Регистрация";
    Layout = "_Layout";
}

@section Styles {
    <style>
        .auth-container {
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            min-height: calc(100vh - 80px);
            padding: 2rem 0;
        }

        .auth-card {
            background: linear-gradient(135deg, #fff 0%, #f8fafc 100%);
            border-radius: 24px;
            box-shadow: 0 20px 40px -10px rgba(124, 58, 237, 0.1);
            overflow: hidden;
            position: relative;
            max-width: 900px;
            margin: 0 auto;
}

        .auth-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 6px;
            background: linear-gradient(90deg, #4c1d95, #7c3aed);
        }

        .auth-header {
            padding: 2.5rem 2.5rem 1.5rem;
            background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
            border-bottom: 1px solid rgba(124, 58, 237, 0.1);
        }

        .auth-title {
            font-family: 'Playfair Display', serif;
            font-size: 2.5rem;
            font-weight: 700;
            background: linear-gradient(135deg, #4c1d95, #7c3aed);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 1rem;
            text-align: center;
            position: relative;
        }

        .auth-title::after {
            content: '';
            position: absolute;
            bottom: -12px;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 4px;
            background: linear-gradient(90deg, #4c1d95, #7c3aed);
            border-radius: 2px;
        }

        .auth-subtitle {
            color: #64748b;
            text-align: center;
            margin-bottom: 0;
            font-size: 1.1rem;
        }

        .auth-body {
            padding: 2.5rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            font-weight: 600;
            color: #4c1d95;
            margin-bottom: 0.5rem;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }

        .form-control {
            border-radius: 12px;
            border: 2px solid #e2e8f0;
            padding: 12px 16px;
            font-size: 1rem;
            background: white;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            width: 100%;
        }

        .form-control:focus {
            border-color: #7c3aed;
            box-shadow: 0 0 0 3px rgba(124, 58, 237, 0.1);
            outline: none;
        }

        .btn-primary {
            background: linear-gradient(135deg, #4c1d95, #7c3aed);
            color: white;
            border: none;
            border-radius: 12px;
            padding: 12px 32px;
            font-weight: 600;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            box-shadow: 0 4px 6px -1px rgba(124, 58, 237, 0.2);
            width: 100%;
            font-size: 1rem;
        }

        .btn-primary:hover {
            background: linear-gradient(135deg, #7c3aed, #4c1d95);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 10px 25px -5px rgba(124, 58, 237, 0.4);
        }

        .text-danger {
            color: #ef4444;
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: block;
        }

        .alert-danger {
            background: linear-gradient(135deg, #fef2f2, #fee2e2);
            border: 1px solid #fecaca;
            border-radius: 12px;
            color: #dc2626;
            padding: 1rem;
            margin-bottom: 1.5rem;
        }

        .external-section {
            background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
            border-radius: 16px;
            padding: 2rem;
            margin-top: 2rem;
            border: 1px solid rgba(124, 58, 237, 0.1);
        }

        .external-title {
            color: #4c1d95;
            font-weight: 600;
            margin-bottom: 1rem;
            text-align: center;
        }

        .external-login .btn {
            margin: 0.5rem;
            border-radius: 12px;
            padding: 10px 20px;
            font-weight: 500;
            transition: all 0.3s;
        }

        .external-login .btn-primary {
            background: linear-gradient(135deg, #4285F4, #34A853);
            border: none;
        }

        .external-login .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px -5px rgba(66, 133, 244, 0.3);
        }

        .password-requirements {
            background-color: #f8fafc;
            border-radius: 12px;
            padding: 1rem;
            border: 1px solid #e2e8f0;
        }

        .requirements-header {
            margin-bottom: 0.5rem;
        }

        .requirements-title {
            color: #4c1d95;
            font-weight: 600;
            font-size: 0.875rem;
        }

        .requirements-list {
            list-style: none;
            padding-left: 0;
            margin: 0;
        }

        .requirement-item {
            display: flex;
            align-items: center;
            margin-bottom: 0.25rem;
            color: #64748b;
            font-size: 0.875rem;
        }

        .requirement-icon {
            margin-right: 0.5rem;
            flex-shrink: 0;
        }

        /* Add this for dynamic validation feedback */
        .requirement-item.valid {
            color: #16a34a;
        }

        .requirement-item.valid .requirement-icon {
            stroke: #16a34a;
            fill: #dcfce7;
        }

        .requirement-item.valid .requirement-icon circle {
            stroke: #16a34a;
        }

        .requirement-item.valid .requirement-icon:after {
            content: '✓';
            position: absolute;
            color: #16a34a;
            font-size: 12px;
            font-weight: bold;
        }

        /* Add to your existing styles */
        input:invalid {
            border-color: #ef4444;
        }

        .text-muted {
            color: #64748b;
            font-size: 0.8rem;
            display: block;
            margin-top: 0.25rem;
        }

        .form-check {
            display: flex;
            align-items: center;
            margin-bottom: 1rem;
        }

        .form-check-input {
            width: 20px;
            height: 20px;
            margin-right: 10px;
            border: 2px solid #7c3aed;
            border-radius: 6px;
            appearance: none;
            -webkit-appearance: none;
            outline: none;
            cursor: pointer;
            position: relative;
        }

        .form-check-input:checked {
            background-color: #7c3aed;
        }

        .form-check-input:checked::after {
            content: '';
            position: absolute;
            left: 6px;
            top: 2px;
            width: 5px;
            height: 10px;
            border: solid white;
            border-width: 0 2px 2px 0;
            transform: rotate(45deg);
        }

        .form-check-label {
            color: #4c1d95;
            font-size: 0.875rem;
            cursor: pointer;
            user-select: none;
        }

        @@media (max-width: 768px) {
            .auth-title {
                font-size: 2rem;
            }

            .auth-header,
            .auth-body {
                padding: 1.5rem;
            }
        }
    </style>
}

<div class="auth-container">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="auth-card">
            <div class="auth-header">
                <h1 class="auth-title">@ViewData["Title"]</h1>
                <p class="auth-subtitle">Създайте нов акаунт</p>
            </div>

            <div class="auth-body">
<div class="row">
                    <div class="col-md-6">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
                            <div asp-validation-summary="ModelOnly" class="alert-danger" role="alert"></div>
                            
                            <div class="form-group">
                                <label asp-for="Input.FName" class="form-label">Име</label>
                <input asp-for="Input.FName" class="form-control" aria-required="true" placeholder="Име" />
                <span asp-validation-for="Input.FName" class="text-danger"></span>
            </div>
                            
                            <div class="form-group">
                                <label asp-for="Input.LName" class="form-label">Фамилия</label>
                <input asp-for="Input.LName" class="form-control" aria-required="true" placeholder="Фамилия" />
                <span asp-validation-for="Input.LName" class="text-danger"></span>
            </div>
                            
                            <div class="form-group">
                                <label asp-for="Input.Birth_Date" class="form-label">Дата на раждане</label>
                                <input asp-for="Input.Birth_Date" class="form-control" 
                                       type="date" 
                                       max="@DateTime.Today.AddYears(-16).ToString("yyyy-MM-dd")"
                                       aria-required="true" />
                                <span asp-validation-for="Input.Birth_Date" class="text-danger"></span>
                                <small class="text-muted">Трябва да сте навършили поне 16 години</small>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="Input.Phone_Number" class="form-label">Телефонен номер</label>
                                <input asp-for="Input.Phone_Number" class="form-control" aria-required="true" placeholder="Телефонен номер" />
                <span asp-validation-for="Input.Phone_Number" class="text-danger"></span>
            </div>
                            
                            <div class="form-group">
                                <label asp-for="Input.Email" class="form-label">Имейл адрес</label>
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
                            
                            <div class="form-group">
                                <label asp-for="Input.Password" class="form-label">Парола</label>
                                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Парола" />
    
                                <div class="password-requirements mt-3">
                                    <div class="requirements-header">
                                        <span class="requirements-title">Изисквания за парола:</span>
                                    </div>
                                    <ul class="requirements-list">
                                        <li class="requirement-item" data-requirement="length">
                                            <svg class="requirement-icon" width="18" height="18" viewBox="0 0 24 24" fill="none">
                                                <circle cx="12" cy="12" r="9" stroke="#94a3b8" stroke-width="2"/>
                                            </svg>
                                            <span>Минимум 8 символа</span>
                                        </li>
                                        <li class="requirement-item" data-requirement="digit">
                                            <svg class="requirement-icon" width="18" height="18" viewBox="0 0 24 24" fill="none">
                                                <circle cx="12" cy="12" r="9" stroke="#94a3b8" stroke-width="2"/>
                                            </svg>
                                            <span>Съдържа поне 1 цифра</span>
                                        </li>
                                        <li class="requirement-item" data-requirement="case">
                                            <svg class="requirement-icon" width="18" height="18" viewBox="0 0 24 24" fill="none">
                                                <circle cx="12" cy="12" r="9" stroke="#94a3b8" stroke-width="2"/>
                                            </svg>
                                            <span>Съдържа малки и големи букви</span>
                                        </li>
                                    </ul>
                                </div>
    
                                <span asp-validation-for="Input.Password" class="text-danger"></span>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="Input.ConfirmPassword" class="form-label">Потвърди парола</label>
                                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Потвърди парола" />
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
                            <div class="form-group">
                                <div class="form-check">
                                    <input asp-for="Input.EmailSend" class="form-check-input" />
                                    <label asp-for="Input.EmailSend" class="form-check-label">Разрешавам изпращането на маркетингови имейли</label>
                                </div>
                            </div>
                            
                            <button id="registerSubmit" type="submit" class="btn-primary">Регистрация</button>
        </form>
    </div>
                    
                    <div class="col-md-6">
                        <div class="external-section">
                            <h3 class="external-title">Регистрация чрез външни услуги</h3>
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                                    <div class="text-center">
                                        <p style="color: #64748b;">
                                            В момента няма конфигурирани външни услуги за автентикация.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                                        <div class="external-login text-center">
                                            <p class="mb-3" style="color: #64748b;">
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Регистрация чрез вашия @provider.DisplayName акаунт">
                                                        @provider.DisplayName
                                                    </button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Password requirements validation
            const passwordInput = document.querySelector('#Input_Password');
            const requirementItems = document.querySelectorAll('.requirement-item');
            
            passwordInput.addEventListener('input', function() {
                const value = this.value;
                
                // Check length requirement
                const lengthValid = value.length >= 8;
                toggleRequirementClass('length', lengthValid);
                
                // Check digit requirement
                const digitValid = /\d/.test(value);
                toggleRequirementClass('digit', digitValid);
                
                // Check case requirement
                const caseValid = /[a-z]/.test(value) && /[A-Z]/.test(value);
                toggleRequirementClass('case', caseValid);
            });
            
            function toggleRequirementClass(requirement, isValid) {
                const item = document.querySelector(`.requirement-item[data-requirement="${requirement}"]`);
                if (isValid) {
                    item.classList.add('valid');
                    // Update the icon to a checkmark
                    item.querySelector('.requirement-icon').innerHTML = `
                        <circle cx="12" cy="12" r="9" fill="#dcfce7" stroke="#16a34a" stroke-width="2"/>
                        <path stroke="#16a34a" stroke-width="2" stroke-linecap="round" d="M8 12l3 3 5-6"/>
                    `;
                } else {
                    item.classList.remove('valid');
                    // Revert to original icon
                    item.querySelector('.requirement-icon').innerHTML = `
                        <circle cx="12" cy="12" r="9" stroke="#94a3b8" stroke-width="2"/>
                    `;
                }
            }

            // Birth date validation
            const birthDateInput = document.getElementById('Input_Birth_Date');
            
            birthDateInput.addEventListener('change', function() {
                const selectedDate = new Date(this.value);
                const today = new Date();
                
                if (selectedDate > today) {
                    this.setCustomValidity('Датата на раждане не може да бъде в бъдещето');
                } else {
                    let age = today.getFullYear() - selectedDate.getFullYear();
                    // Check if birthday hasn't occurred yet this year
                    if (selectedDate > new Date(today.getFullYear(), today.getMonth(), today.getDate())) {
                        age--;
                    }
                    
                    if (age < 16) {
                        this.setCustomValidity('Трябва да сте навършили поне 16 години');
                    } else {
                        this.setCustomValidity('');
                    }
                }
                
                // Visual feedback
                if (this.checkValidity()) {
                    this.classList.remove('is-invalid');
                    this.classList.add('is-valid');
                } else {
                    this.classList.remove('is-valid');
                    this.classList.add('is-invalid');
                }
            });
        });

        // jQuery validation for unobtrusive validation
        $(function() {
            $.validator.addMethod('minimumage', function(value, element, params) {
                if (!value) return false;
                
                const birthDate = new Date(value);
                const today = new Date();
                const minDate = new Date();
                minDate.setFullYear(today.getFullYear() - params);
                
                return birthDate <= minDate;
            });

            $.validator.unobtrusive.adapters.add('minimumage', ['age'], function(options) {
                options.rules['minimumage'] = parseInt(options.params.age);
                options.messages['minimumage'] = options.message;
            });
        });
    </script>
}
}
