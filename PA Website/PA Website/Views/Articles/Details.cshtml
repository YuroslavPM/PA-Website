@model PA_Website.Models.Article
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager
@inject RoleManager<IdentityRole> RoleManager
@{
    var user = await UserManager.GetUserAsync(User);
    var isAdmin = user != null && await UserManager.IsInRoleAsync(user, "Admin");
    ViewData["Title"] = "Details";
    Layout = "_Layout";
}

@section Styles {
    <style>
        .article-detail-container {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            padding: 2rem 0;
            min-height: calc(100vh - 80px);
        }

        .article-card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            overflow: hidden;
            position: relative;
            background: white;
        }

            .article-card:before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 5px;
                background: linear-gradient(90deg, #4a0e78, #6a3093);
            }

        .article-header {
            padding: 2rem;
        }

        .article-title {
            font-family: 'Playfair Display', serif;
            color: #4a0e78;
            font-size: 2.2rem;
            font-weight: 700;
            margin-bottom: 1.5rem;
            text-align: center;
        }

        .article-meta {
            display: flex;
            justify-content: center;
            gap: 2rem;
            margin-bottom: 1.5rem;
            color: #6a3093;
            font-size: 0.95rem;
        }

        .article-meta-item {
            display: flex;
            align-items: center;
        }

            .article-meta-item i {
                margin-right: 8px;
            }

        .article-content {
            padding: 0 2rem 2rem;
            line-height: 1.8;
            color: #333;
        }

        .article-footer {
            padding: 1.5rem;
            background: rgba(106, 48, 147, 0.05);
            border-top: 1px solid rgba(106, 48, 147, 0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .article-image-wrapper {
            width: 100%;
            display: flex;
            justify-content: center;
            margin: 1.5rem 0 2.5rem 0;
            padding: 0 2rem;
        }

        .article-image-container {
            max-width: 80%;
            max-height: 430px;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            background-color: #f8f9fa;
        }

            .article-image-container img {
                width: 100%;
                height: 100%;
                object-fit: contain;
                display: block;
            }

        .btn-article {
            background: linear-gradient(135deg, #4a0e78, #6a3093);
            color: white;
            border: none;
            border-radius: 25px;
            padding: 8px 20px;
            font-size: 0.9rem;
            transition: all 0.3s;
        }

            .btn-article:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(74, 14, 120, 0.3);
                color: white;
            }

        .btn-outline-article {
            border: 1px solid #4a0e78;
            color: #4a0e78;
            border-radius: 25px;
            padding: 8px 20px;
            font-size: 0.9rem;
            transition: all 0.3s;
        }

            .btn-outline-article:hover {
                background: linear-gradient(135deg, #4a0e78, #6a3093);
                color: white;
            }

        .btn-warning {
            border-radius: 25px;
            padding: 8px 20px;
            font-size: 0.9rem;
        }

        @@media (max-width: 992px) {
            .article-image-wrapper {
                padding: 0 1.5rem;
            }

            .article-image-container {
                max-height: 400px;
            }
        }

        @@media (max-width: 768px) {
            .article-title {
                font-size: 1.8rem;
            }

            .article-image-wrapper {
                padding: 0 1rem;
            }

            .article-image-container {
                max-height: 350px;
            }

            .article-meta {
                flex-direction: column;
                gap: 0.5rem;
                align-items: center;
            }

            .article-footer {
                flex-direction: column;
                gap: 1rem;
            }
        }

        @@media (max-width: 576px) {
            .article-image-wrapper {
                padding: 0;
            }

            .article-image-container {
                border-radius: 0;
                max-height: 300px;
            }
        }
    </style>
}

<div class="article-detail-container">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="article-card">
                    <div class="article-header">
                        <h1 class="article-title">@Model.Title</h1>
                        <div class="article-meta">
                            <div class="article-meta-item">
                                <i class="fas fa-tag"></i>
                                <span>@Model.Category</span>
                            </div>
                            <div class="article-meta-item">
                                <i class="far fa-calendar-alt"></i>
                                <span>@Model.PublicationDate.ToString("dd MMMM yyyy")</span>
                            </div>
                        </div>
                    </div>

                    <div class="article-image-wrapper">
                        <div class="article-image-container">
                            @if (!string.IsNullOrEmpty(Model.ImagePath))
                            {
                                <img src="@Model.ImagePath"
                                     alt="@Model.Title"
                                     loading="lazy"
                                     onerror="this.onerror=null;this.src='/images/placeholder-article.jpg'">
                            }
                            else
                            {
                                <img src="/images/default-article.jpg"
                                     alt="Няма изображение">
                            }
                        </div>
                    </div>

                    <div class="article-content">
                        @Html.Raw(Model.Description.Replace("\n", "<br/>"))
                    </div>

                    <div class="article-footer">
                        <a asp-action="Index" class="btn btn-outline-article">
                            <i class="fas fa-arrow-left me-1"></i> Обратно към статиите
                        </a>
                        @if (isAdmin)
                        {
                            <div class="d-flex gap-2">
                                <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-warning">
                                    <i class="fas fa-edit me-1"></i> Редактирай
                                </a>
                                <a asp-action="Delete" asp-route-id="@Model?.Id" class="btn btn-danger">
                                    <i class="fas fa-trash-alt me-1"></i> Изтрий
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}