@using Microsoft.AspNetCore.Identity
@using PA_Website.Helpers
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager
@inject RoleManager<IdentityRole> RoleManager

@model IEnumerable<PA_Website.Models.Article>

@{
    ViewData["Title"] = "Статии";
    var user = await UserManager.GetUserAsync(User);
    var isAdmin = user != null && await UserManager.IsInRoleAsync(user, "Admin");
    Layout = "_Layout";
}

@section Styles {
    <style>
        .articles-container {
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            min-height: calc(100vh - 80px);
            padding: 2rem 0;
        }

        .articles-header {
            background: linear-gradient(135deg, #fff 0%, #f8fafc 100%);
            border-radius: 24px;
            box-shadow: 0 20px 40px -10px rgba(124, 58, 237, 0.1);
            padding: 2.5rem;
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
        }

        .articles-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 6px;
            background: linear-gradient(90deg, #4c1d95, #7c3aed);
        }

        .articles-title {
            font-family: 'Playfair Display', serif;
            font-size: 2.5rem;
            font-weight: 700;
            background: linear-gradient(135deg, #4c1d95, #7c3aed);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 1rem;
            position: relative;
        }

        .articles-title::after {
                content: '';
                position: absolute;
            bottom: -12px;
            left: 0;
            width: 100px;
            height: 4px;
            background: linear-gradient(90deg, #4c1d95, #7c3aed);
                border-radius: 2px;
            }

        .articles-subtitle {
            color: #64748b;
            font-size: 1.1rem;
            margin-bottom: 1.5rem;
        }

        .btn-create {
            background: linear-gradient(135deg, #4c1d95, #7c3aed);
            color: white;
            border: none;
            border-radius: 12px;
            padding: 12px 32px;
            font-weight: 600;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            box-shadow: 0 4px 6px -1px rgba(124, 58, 237, 0.2);
            font-size: 1rem;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-create:hover {
            background: linear-gradient(135deg, #7c3aed, #4c1d95);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 10px 25px -5px rgba(124, 58, 237, 0.4);
        }

        .articles-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .article-card {
            background: linear-gradient(135deg, #fff 0%, #f8fafc 100%);
            border-radius: 20px;
            box-shadow: 0 10px 30px -5px rgba(124, 58, 237, 0.1);
            overflow: hidden;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            border: 1px solid rgba(124, 58, 237, 0.1);
            cursor: pointer;
        }

        .article-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 25px 50px -12px rgba(124, 58, 237, 0.25);
        }

        .article-image {
            height: 250px;
            background: linear-gradient(135deg, #4c1d95, #7c3aed);
            position: relative;
            overflow: hidden;
        }

            .article-image img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                transition: transform 0.3s ease;
            }

        .article-card:hover .article-image img {
            transform: scale(1.05);
        }

        .article-image::before {
                content: '';
                position: absolute;
            inset: 0;
            background: linear-gradient(135deg, rgba(76, 29, 149, 0.3), rgba(124, 58, 237, 0.3));
            z-index: 1;
            }

        .article-content {
            padding: 1.5rem;
        }

        .article-meta {
                display: flex;
            justify-content: space-between;
                align-items: center;
            margin-bottom: 1rem;
            flex-wrap: wrap;
            gap: 0.5rem;
            }

        .category-badge {
            background: linear-gradient(135deg, #f59e0b, #f97316);
            color: white;
            border-radius: 12px;
            padding: 0.5rem 1rem;
            font-weight: 600;
            font-size: 0.875rem;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .date-badge {
            background: linear-gradient(135deg, #4c1d95, #7c3aed);
                color: white;
            border-radius: 12px;
            padding: 0.5rem 1rem;
            font-weight: 600;
            font-size: 0.875rem;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .article-title {
            font-family: 'Playfair Display', serif;
            font-size: 1.25rem;
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 0.75rem;
            line-height: 1.4;
        }

        .article-description {
            color: #6b7280;
            font-size: 0.875rem;
            line-height: 1.5;
            margin-bottom: 1rem;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
            }

        .article-author {
            color: #9ca3af;
            font-size: 0.875rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 1.5rem;
        }

        .article-actions {
            display: flex;
            gap: 0.75rem;
            flex-wrap: wrap;
        }

        .btn-primary {
            background: linear-gradient(135deg, #4c1d95, #7c3aed);
            color: white;
            border: none;
            border-radius: 8px;
            padding: 0.5rem 1rem;
            font-weight: 500;
            font-size: 0.875rem;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-primary:hover {
            background: linear-gradient(135deg, #7c3aed, #4c1d95);
            color: white;
            transform: translateY(-1px);
        }

        .btn-outline {
            border: 1px solid #4c1d95;
            color: #4c1d95;
            border-radius: 8px;
            padding: 0.5rem 1rem;
            font-weight: 500;
            font-size: 0.875rem;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            background: white;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

            .btn-outline:hover {
            background: linear-gradient(135deg, #4c1d95, #7c3aed);
                color: white;
            transform: translateY(-1px);
            }

        .btn-danger {
            border: 1px solid #dc2626;
            color: #dc2626;
            border-radius: 8px;
            padding: 0.5rem 1rem;
            font-weight: 500;
            font-size: 0.875rem;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
                background: white;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            }

        .btn-danger:hover {
            background: linear-gradient(135deg, #dc2626, #ef4444);
            color: white;
            transform: translateY(-1px);
        }

        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            background: linear-gradient(135deg, #fff 0%, #f8fafc 100%);
            border-radius: 24px;
            box-shadow: 0 20px 40px -10px rgba(124, 58, 237, 0.1);
            max-width: 500px;
            margin: 0 auto;
        }

        .empty-icon {
            font-size: 4rem;
            color: #4c1d95;
            opacity: 0.5;
            margin-bottom: 1.5rem;
        }

        .empty-title {
            font-family: 'Playfair Display', serif;
            font-size: 1.5rem;
            font-weight: 600;
            color: #1f2937;
                margin-bottom: 1rem;
            }

        .empty-description {
            color: #6b7280;
            margin-bottom: 2rem;
            }

        @@media (max-width: 768px) {
            .articles-title {
                font-size: 2rem;
            }

            .articles-header {
                padding: 1.5rem;
            }

            .articles-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 1.5rem;
            }

            .article-actions {
                flex-direction: column;
            }
        }

        @@media (max-width: 480px) {
            .articles-grid {
                grid-template-columns: 1fr;
                gap: 1.5rem;
            }
        }

        /* Pagination Styles */
        .pagination-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 1rem;
            margin-top: 2rem;
            padding: 2rem;
            background: linear-gradient(135deg, #fff 0%, #f8fafc 100%);
            border-radius: 20px;
            box-shadow: 0 10px 30px -5px rgba(124, 58, 237, 0.1);
        }

        .pagination-nav {
            display: flex;
            justify-content: center;
        }

        .pagination-list {
            display: flex;
            list-style: none;
            margin: 0;
            padding: 0;
            gap: 0.5rem;
            align-items: center;
            flex-wrap: wrap;
            justify-content: center;
        }

        .pagination-item {
            display: flex;
            align-items: center;
        }

        .pagination-link {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.75rem 1rem;
            background: linear-gradient(135deg, #fff 0%, #f8fafc 100%);
            border: 1px solid rgba(124, 58, 237, 0.2);
            border-radius: 12px;
            color: #4c1d95;
            text-decoration: none;
            font-weight: 500;
            font-size: 0.875rem;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            min-width: 2.5rem;
            justify-content: center;
        }

        .pagination-link:hover {
            background: linear-gradient(135deg, #4c1d95, #7c3aed);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 8px 20px -5px rgba(124, 58, 237, 0.3);
            border-color: transparent;
        }

        .pagination-current {
            background: linear-gradient(135deg, #4c1d95, #7c3aed);
            color: white;
            border-color: transparent;
            font-weight: 600;
            box-shadow: 0 4px 12px -2px rgba(124, 58, 237, 0.4);
        }

        .pagination-prev,
        .pagination-next {
            padding: 0.75rem 1.5rem;
            font-weight: 600;
        }

        .pagination-ellipsis {
            padding: 0.75rem 0.5rem;
            color: #9ca3af;
            font-weight: 500;
        }

        .pagination-info {
            text-align: center;
        }

        .pagination-info p {
            color: #6b7280;
            font-size: 0.875rem;
            margin: 0;
        }

        @@media (max-width: 640px) {
            .pagination-container {
                padding: 1.5rem;
                margin-top: 1.5rem;
            }

            .pagination-list {
                gap: 0.25rem;
            }

            .pagination-link {
                padding: 0.5rem 0.75rem;
                font-size: 0.8rem;
                min-width: 2rem;
            }

            .pagination-prev,
            .pagination-next {
                padding: 0.5rem 1rem;
            }

            .pagination-prev span,
            .pagination-next span {
                display: none;
            }
        }
    </style>
}

<div class="articles-container">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Header -->
        <div class="articles-header">
            <div class="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
                <div>
                    <h1 class="articles-title">Статии</h1>
                    <p class="articles-subtitle">Тук събирам мисли, знания и практически идеи от света на психологията, астропсихологията и ароматерапията – всичко, което може да ти помогне да откриваш смисъл и хармония в ежедневието.</p>
                </div>

        @if (isAdmin)
        {
                    <a href="@Url.Action("Create", "Articles")" class="btn-create">
                        <i class="fas fa-plus"></i>
                        Добави статия
                </a>
                }
            </div>
        </div>

        <!-- Articles Grid -->
        @if (Model.Any())
        {
            <div class="articles-grid">
                @foreach (var article in Model)
                {
                        <div class="article-card" data-article-id="@article.Id" onclick="window.location.href='@Url.Action("Details", "Articles", new { id = article.Id })'">
                        <!-- Article Image -->
                        <div class="article-image">
                            @if (!string.IsNullOrEmpty(article.ImagePath))
                            {
                                <img src="@article.ImagePath" alt="@article.Title" />
                            }
                            else
                            {
                                <div class="flex items-center justify-center h-full">
                                    <i class="fas fa-newspaper text-6xl text-white opacity-50"></i>
                                </div>
                            }
                                </div>

                        <!-- Article Content -->
                        <div class="article-content">
                            <div class="article-meta">
                                @if (!string.IsNullOrEmpty(article.Category))
                                {
                                    <span class="category-badge">
                                        <i class="fas fa-tag"></i>
                                        @article.Category
                                    </span>
                                }
                                <span class="date-badge">
                                    <i class="fas fa-calendar"></i>
                                    @article.PublicationDate.ToString("dd.MM.yyyy")
                                </span>
                            </div>

                            <h3 class="article-title">@article.Title</h3>
                            
                            @if (!string.IsNullOrEmpty(article.Description))
                            {
                                <p class="article-description">@Html.Raw(article.Description.TruncateHtml(60))</p>
                            }

                           
                                <div class="article-author">
                                    <i class="fas fa-user"></i>
                                    <span>Мариела Разпопова</span>
                                </div>
                            

                            <!-- Action Buttons -->
                            <div class="article-actions">
                                <div class="btn-primary">
                                    <i class="fas fa-eye"></i>
                                    Прочети
                                </div>

                                @if (isAdmin)
                                {
                                    <a href="@Url.Action("Edit", "Articles", new { id = article.Id })" class="btn-outline" onclick="event.stopPropagation();">
                                                <i class="fas fa-edit"></i>
                                        Редактирай
                                            </a>

                                    <a href="@Url.Action("Delete", "Articles", new { id = article.Id })" class="btn-danger" onclick="event.stopPropagation();">
                                        <i class="fas fa-trash"></i>
                                        Изтрий
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <!-- Empty State -->
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-newspaper"></i>
                </div>
                <h3 class="empty-title">Все още няма статии</h3>
                <p class="empty-description">
                    В момента не са налични статии. Моля, проверете отново по-късно.
                </p>
                @if (isAdmin)
                {
                    <a href="@Url.Action("Create", "Articles")" class="btn-create">
                        <i class="fas fa-plus"></i>
                        Добави първата статия
                    </a>
                }
            </div>
        }

        <!-- Pagination -->
        @if (Model.Any())
        {
            <div class="pagination-container">
                <nav class="pagination-nav" aria-label="Article pagination">
                    <ul class="pagination-list">
                        @{
                            int currentPage = (int)ViewData["CurrentPage"];
                            int totalPages = (int)ViewData["TotalPages"];
                            
                            // Previous button
                            if (currentPage > 1)
                            {
                                <li class="pagination-item">
                                    <a href="@Url.Action("Index", "Articles", new { pageNumber = currentPage - 1 })" 
                                       class="pagination-link pagination-prev" aria-label="Previous page">
                                        <i class="fas fa-chevron-left"></i>
                                        <span>Предишна</span>
                                    </a>
                                </li>
                            }

                            // Page numbers
                            int startPage = Math.Max(1, currentPage - 2);
                            int endPage = Math.Min(totalPages, currentPage + 2);

                            // Show first page if not in range
                            if (startPage > 1)
                            {
                                <li class="pagination-item">
                                    <a href="@Url.Action("Index", "Articles", new { pageNumber = 1 })" class="pagination-link">1</a>
                                </li>
                                if (startPage > 2)
                                {
                                    <li class="pagination-item">
                                        <span class="pagination-ellipsis">...</span>
                                    </li>
                                }
                            }

                            // Show page numbers in range
                            for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="pagination-item">
                                    @if (i == currentPage)
                                    {
                                        <span class="pagination-link pagination-current">@i</span>
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("Index", "Articles", new { pageNumber = i })" class="pagination-link">@i</a>
                                    }
                                </li>
                            }

                            // Show last page if not in range
                            if (endPage < totalPages)
                            {
                                if (endPage < totalPages - 1)
                                {
                                    <li class="pagination-item">
                                        <span class="pagination-ellipsis">...</span>
                                    </li>
                                }
                                <li class="pagination-item">
                                    <a href="@Url.Action("Index", "Articles", new { pageNumber = totalPages })" class="pagination-link">@totalPages</a>
                                </li>
                            }

                            // Next button
                            if (currentPage < totalPages)
                            {
                                <li class="pagination-item">
                                    <a href="@Url.Action("Index", "Articles", new { pageNumber = currentPage + 1 })" 
                                       class="pagination-link pagination-next" aria-label="Next page">
                                        <span>Следваща</span>
                                        <i class="fas fa-chevron-right"></i>
                                    </a>
                                </li>
                            }
                        }
                    </ul>
                </nav>
                
                <div class="pagination-info">
                    <p>Страница @ViewData["CurrentPage"] от @ViewData["TotalPages"]</p>
                </div>
            </div>
        }
    </div>
</div>
